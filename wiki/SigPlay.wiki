#summary sig.play: Sonification of the result

= sig.play: Sonification of the result =

Certain classes of temporal data can be sonified:
  * `sig.input` objects: the waveform is directly played, and
   * if the audio waveform is segmented (using mirsegment), segments are played successively with a short burst of noise in-between;
   * if the audio waveform is decomposed into channels (using mirfilterbank), channels are played successively from low to high register;
   * if the audio is decomposed into frames (using mirframe), frames are played successively;
  * file name(s) or the ‘Folder’ keyword: same behavior than for miraudio objects;
  * mirenvelope objects (frame-decomposed or not) are sonified using a white noise modulated in amplitude by the envelope, and
if peaks have been picked on the envelope curve (using mirpeaks), they are sonified using a short impulse sound;
  * mirpitch results: each extracted frequency is sonified using a sinusoid.


== Frame decomposition ==
mirplay(..., ‘Frame’, ...) performs first a frame decomposition, with by default a frame length of 50 ms and half overlapping. For the specification of other frame configuration using additional parameters, cf. the previous mirframe vs. ‘Frame’ section. 


== Options ==
  * `mirplay(..., 'Channel’, i)` plays the channel(s) of rank(s) indicated by the array i.
  * `mirplay(..., 'Segment’, k)` plays the segment(s) of rank(s) indicated by the array k.
  * `mirplay(..., 'Sequence’, l)` plays a sequence of audio files using the order indicated by the array l.
  * `mirplay(..., 'Increasing’, d)` plays the sequences in increasing order of d, which can be either an array of number or a mirscalar data (i.e., a scalar data returned by MIRtoolbox).
  * `mirplay(..., 'Decreasing’, d)` plays the sequences in decreasing order of d, which can be either an array of number or a mirscalar data (i.e., a scalar data returned by MIRtoolbox).
  * `mirplay(..., 'Every’, s)` plays every s sequence, where s is a number indicating the step between sequences.
  * `mirplay(...,‘Burst’, ‘No’)` toggles off the burst sound between segments.

*Example:*
{{{
e=mirenvelope('Folder');

rms=mirrms('Folder');

mirplay(e, 'increasing', rms, 'every',5)
}}}