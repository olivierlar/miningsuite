#summary aud.mfcc: Mel-Frequency Cepstral Coefficients

= aud.mfcc: Mel-Frequency Cepstral Coefficients =

MFCC offers a description of the spectral shape of the sound. We recall that the computation of the cepstrum followed the following scheme:

https://miningsuite.googlecode.com/svn/wiki/SigMfcc_ex1.png

<br>
The computation of mel-frequency cepstral coefficients is highly similar:

https://miningsuite.googlecode.com/svn/wiki/SigMfcc_ex2.png

Here the frequency bands are positioned logarithmically (on the Mel scale) which approximates the human auditory system's response more closely than the linearly-spaced frequency bands. And the Fourier Transform is replaced by a Discrete Cosine Transform. A discrete cosine transform (DCT) is a Fourier-related transform similar to the discrete Fourier transform (DFT), but using only real numbers. It has a strong "energy compaction" property: most of the signal information tends to be concentrated in a few low-frequency components of the DCT. That is why by default only the first 13 components are returned.

By convention, the coefficient of rank zero simply indicates the average energy of the signal.

<br>
== Flowchart Interconnections ==

`aud.mfcc` accepts either:
  * `sig.Spectrum` objects, or<p>
  * `sig.input` objects (same as for sig.spectrum),<p>
  * file name(s) or the `'Folder'` keyword.
<br>

`aud.mfcc` can return several outputs:
  * the mfcc coefficients themselves and<p>
  * the spectral representation (output of `aud.spectrum`), in mel-band and log-scale.
<br>

== Frame decomposition ==

`aud.mfcc(…,'Frame',…)` performs first a frame decomposition, with by default a frame length of 50 ms and half overlapping. For the specification of other frame configuration using additional parameters, cf. the previous SigFrame vs. 'Frame' section.
<br><br>


== Options ==

  * `aud.mfcc(…,'Bands',`_b_`)` indicates the number of bands used in the mel-band spectrum decomposition. By default, _b_ = 40.<p>
  * `aud.mfcc(…,'Rank',`_N_`)` computes the coefficients of rank(s) _N_. The default value is _N_ = 1:13. Beware that the coefficient related to the average energy is by convention here of rank 0. This zero value can be included to the array _N_ as well.<p>
  * If the output is frame-decomposed, showing the the temporal evolution of the MFCC along the successive frames, the temporal differentiation can be computed:<p>
   * `aud.mfcc(…,'Delta',`_d_`)` performs temporal differentiations of order _d_ of the coefficients, also called delta-MFCC (for _d_ = 1) or delta-delta-MFCC (for _d_ = 2). By default, _d_ = 1.<p>
   * `aud.mfcc(…,'Radius',`_r_`)` specifies, for each frame, the number of successive and previous neighbouring frames taken into consideration for the least-square approximation used for the derivation. For a given radius _r_, the Delta operation for each frame _i_ is computed by summing the MFCC coefficients at frame _i+j_ (with _j_ from _-r_ to _+r_) , each coefficient being multiplied by its weight _j_. Usually the radius is equal to 1 or 2. Default value: _r_ = 2.

<br>
== Accessible Output ==

  * `.xdata`: the series of rank(s) taken into consideration,<p>
  * `.delta`: the number of times the delta operation has been performed.