#summary sig.flux: Distance between successive frames

= sig.flux: Distance between successive frames =

Given a spectrogram:
{{{
s=sig.spectrum(a,'Frame')
}}}

https://miningsuite.googlecode.com/svn/wiki/SigFlux_ex1.png

we can compute the spectral flux as being the distance between the spectrum of each successive frames.

{{{
sig.flux(s)
}}}

https://miningsuite.googlecode.com/svn/wiki/SigFlux_ex2.png

The peaks in the curve indicate the temporal position of important contrast in the spectrogram.

In MiningSuite fluxes are generalized to any kind of frame-decomposed representation, for instance a cepstral flux:

{{{
c=sig.cepstrum(a,'Frame')
}}}

https://miningsuite.googlecode.com/svn/wiki/SigFlux_ex3.png

{{{
sig.flux(c)
}}}

https://miningsuite.googlecode.com/svn/wiki/SigFlux_ex4.png

<br>
== Flowchart Interconnections ==

`sig.flux` usually accepts either:
  * `sig.spectrum` frame-decomposed objects.<p>
  * `sig.input` objects, where the audio waveform can be segmented (using `sig.segment`), decomposed into channels (using `sig.filterbank`). The audio waveform is decomposed into frames if it was not decomposed yet. If the input is a _sig.input_ object, the default flux is a spectral flux: i.e., the audio waveform is passed to the _sig.spectrum_ operator before being fed into _sig.flux_.<p>
  * file name(s) or the `'Folder'` keyword: same behavior as for `sig.input` objects;<p>
  * `sig.autocor` frame-decomposed objects;<p>
  * `sig.cepstrum` frame-decomposed objects;<p>
  * `sig.mfcc` frame-decomposed objects;<p>
  * `sig.chromagram` frame-decomposed objects;<p>
  * `sig.keystrength` frame-decomposed objects.

<br>
== Frame decomposition ==

`sig.flux(…,'Frame',…)` specifies the frame configuration, the default being a frame length of 50 ms and half overlapping. For the syntax, cf. the previous SigFrame vs. 'Frame' section.

<br>
== Parameters specification ==

  * `sig.flux(`_x_`,'Dist',`_d_`)` specifies the distance between successive frames, among the list of distances available in pdist (cf. `help pdist`). Default distance: `'Euclidean'`.<p>
  * `sig.flux(…,'Inc')`: Only positive difference between frames are summed, in order to focus on increase of energy solely. If toggled on, `'Dist'` parameter can only accept `'Euclidean'`, `'Cosine'` or 'City'`.<p>
  * `sig.flux(…,'Complex')`, for spectral flux, combines the use of both energy and phase information (Bello et al, 2004).<p>

<br>
== Post-processing ==

  * `sig.flux(…,'Halfwave')`: performs a half-wave  rectification on the result.

  * `sig.flux(…,'Median',`_l,C_`)`: removes small spurious peaks by subtracting to the result its median filtering. The median filter computes the point-wise median inside a window of length l (in seconds), that  includes a same number of previous and next samples. _C_ is a scaling factor whose purpose is to artificially rise the curve slightly above the steady state of the signal. If no parameters are given, the default values are: _l_ = 0.2 s. and _C_ = 1.3

  * `sig.flux(…,'Median',`_l,C_`, 'Halfwave')`: The scaled median filtering is designed to be succeeded by the  half-wave rectification process in order to select peaks above the dynamic threshold calculated with the help of the median filter. The resulting signal is called _“detection function”_ (Alonso et al., 2003). To ensure accurate detection, the length l of the median filter must be longer than the average width of the peaks of the detection function.

== Auditory model ==

Auditory modelling of spectral flux is available in [AudFlux aud.flux].